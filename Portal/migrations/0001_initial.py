# Generated by Django 4.1.3 on 2023-05-12 09:00

import Portal.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CorporateProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deartime_payerid', models.IntegerField(blank=True, null=True)),
                ('company_name', models.CharField(max_length=100)),
                ('val_company_name', models.CharField(max_length=100)),
                ('registration_no', models.CharField(max_length=100)),
                ('val_registration_no', models.CharField(max_length=100)),
                ('contact1', models.CharField(blank=True, max_length=25, null=True)),
                ('contact2', models.CharField(blank=True, max_length=25, null=True)),
                ('email_address', models.CharField(max_length=100)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line3', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=25, null=True)),
                ('city', models.CharField(blank=True, max_length=25, null=True)),
                ('postcode', models.CharField(blank=True, max_length=25, null=True)),
                ('payment_due_date', models.CharField(blank=True, max_length=25, null=True)),
                ('submitted', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=200)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('rejected', models.BooleanField(default=False)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Corporate Profile',
                'db_table': 'CorporateProfile',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=50)),
                ('senangpay_refno', models.CharField(blank=True, max_length=50, null=True)),
                ('total_amount', models.CharField(max_length=50)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('hash_value', models.CharField(blank=True, max_length=255, null=True)),
                ('deartime_orderid', models.IntegerField(blank=True, null=True)),
                ('receipt_no', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.corporateprofile')),
            ],
            options={
                'verbose_name_plural': 'Invoice',
                'db_table': 'Invoice',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_no', models.CharField(blank=True, max_length=50, null=True)),
                ('employment_no', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('email_address', models.CharField(max_length=100)),
                ('mobile_no', models.CharField(max_length=25)),
                ('nationality', models.CharField(max_length=25)),
                ('mykad', models.CharField(blank=True, max_length=25, null=True)),
                ('passport', models.CharField(blank=True, max_length=25, null=True)),
                ('dob', models.DateField()),
                ('gender', models.CharField(max_length=10)),
                ('tentative_premium', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=50, null=True)),
                ('submitted', models.BooleanField(default=False)),
                ('medical_survey', models.BooleanField(default=False)),
                ('paid', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('void', models.BooleanField(default=False)),
                ('deartime_memberid', models.IntegerField(blank=True, null=True)),
                ('last_reminder', models.DateTimeField(blank=True, null=True)),
                ('rejected', models.BooleanField(default=False)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('is_existing', models.BooleanField(default=False)),
                ('reminder_count', models.IntegerField(blank=True, null=True)),
                ('generated_invoice', models.BooleanField(default=False)),
                ('corporate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.corporateprofile')),
            ],
            options={
                'verbose_name_plural': 'Premium Holder',
                'db_table': 'Member',
            },
        ),
        migrations.CreateModel(
            name='MessagingQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.CharField(blank=True, max_length=100, null=True)),
                ('message_content', models.TextField()),
                ('module', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=False)),
                ('request_datetime', models.DateTimeField(auto_now=True)),
                ('send_datetime', models.DateTimeField(blank=True, null=True)),
                ('retry', models.IntegerField(blank=True, default=0, null=True)),
                ('void', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'MessageQueue',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', Portal.models.SaveUppercase(max_length=150)),
                ('description', models.CharField(blank=True, max_length=350, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Package',
                'db_table': 'Package',
            },
        ),
        migrations.CreateModel(
            name='CorporateUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', Portal.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UploadMemberFilenames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original', models.CharField(max_length=200)),
                ('renamed', models.CharField(max_length=200)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('corporate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.corporateprofile')),
            ],
            options={
                'verbose_name_plural': 'Upload Member Filenames',
                'db_table': 'UploadMemberFilenames',
            },
        ),
        migrations.CreateModel(
            name='RelationshipType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Relationship Type',
                'db_table': 'RelationshipType',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Product',
                'db_table': 'Product',
            },
        ),
        migrations.CreateModel(
            name='PackageProductMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage_amount', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.package')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Package Product Mapping',
                'db_table': 'PackageProductMapping',
            },
        ),
        migrations.AddField(
            model_name='package',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='package',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.invoice')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.member')),
            ],
            options={
                'verbose_name_plural': 'Order',
                'db_table': 'Order',
            },
        ),
        migrations.CreateModel(
            name='MemberProductMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deartime_coverageid', models.IntegerField(blank=True, null=True)),
                ('coverage_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=50)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.member')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.product')),
            ],
            options={
                'verbose_name_plural': 'Member Product Mapping',
                'db_table': 'MemberProductMapping',
            },
        ),
        migrations.CreateModel(
            name='MemberCoveragePremium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_monthly', models.FloatField()),
                ('payment_annually', models.FloatField()),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.member')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.product')),
            ],
            options={
                'verbose_name_plural': 'Member Coverage Premium',
                'db_table': 'MemberCoveragePremium',
            },
        ),
        migrations.AddField(
            model_name='member',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.package'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CorporateProfileFormAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_code', models.CharField(max_length=30)),
                ('attachment_type', models.CharField(max_length=30)),
                ('attachment', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.corporateprofile')),
            ],
            options={
                'verbose_name_plural': 'Corporate Profile Form Attachment',
                'db_table': 'CorporateProfileFormAttachment',
            },
        ),
        migrations.AddField(
            model_name='corporateprofile',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='corporateprofile',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='corporateprofile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CompanyRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_voided', models.BooleanField(default=False)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('void_datetime', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.corporateprofile')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('relationship_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.relationshiptype')),
                ('voided_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'CompanyRelationship',
                'db_table': 'CompanyRelationship',
            },
        ),
        migrations.CreateModel(
            name='CompanyFormType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_type_name', models.CharField(max_length=25)),
                ('description', models.CharField(max_length=25)),
                ('upload_type', models.CharField(choices=[('single', 'Single Upload'), ('multiple', 'Multiple Upload')], max_length=25)),
                ('is_active', models.BooleanField(default=True)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Company Form Type',
                'db_table': 'CompanyFormType',
            },
        ),
        migrations.CreateModel(
            name='CompanyFormRelationshipMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_voided', models.BooleanField(default=False)),
                ('created_datetime', models.DateTimeField(auto_now=True)),
                ('void_datetime', models.DateTimeField(blank=True, null=True)),
                ('company_form_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.companyformtype')),
                ('company_relationship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Portal.companyrelationship')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('voided_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Company Form Relationship Mapping',
                'db_table': 'CompanyFormRelationshipMapping',
            },
        ),
    ]
